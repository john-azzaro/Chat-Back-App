Process Notes for Chat Back App
===============================




About Process Notes
=============
"Process Notes" is a step-by-step workflow document that outlines the "phases" of app development and the successive steps
for each phase. Although documenting each step of the application development from start to finish is a bit more work, it 
has proven EXTREMELY valuable in bug hunting and ESPECIALLY refining workflow for future use. If you've seen my other projects
and process notes, you'll notice that the process notes evolve as I find ways to improve the documentation for content
and readability. In the case of the "issue index app", each phase has a title, brief description of the phase, individual steps
for each phase (with notes and intent), and notes at the end.





Objective and User Story
========================
The objective of this application is to create a multi-user chat room with custom rooms for users. When the user 
arrives, they will be able to either create a room or join a room. If the user creates a room of thier own, they 
will be prompted to input the name of the room and then the room will be created. The room will be listed on the 
main page and other users can join.





Extended Workflow Summary
=========================
    Phase 1: Project Setup:
        1. Project Setup
        2. Install Express
        3. Install development environment
        4. Add custom start scripts
        5. Add server.js





Phase 1: Project Setup
======================================================================================
* Basic setup, installation of dependencies, development environment setup, and essential 
   files like server.js, .gitignore, and .env.
======================================================================================

    // Project Setup:                           
        1.1:  Issue-Index-App                                     -- Create a folder to store you application.
        1.2:  npm init                                            -- Create a package.json file to start the project off.

    // Install express:
        1.3:  npm install express                                 -- Install express.
        1.4:  .gitignore > node_modules                           -- Tell git to ignore node_modules folder.

    // Install development environment:       
        1.5:  npm install --save-dev nodemon                      -- Install development enviroment.

    // Create custom "devStart" script in package.json:     
        1.6:  "devStart": "nodemon server.js"                     -- Run development environment (npm run devStart).
        1.7:  "start": "node server.js"                           -- Run server normally in a production environment (npm run start).
        
    // Add server.js file:       
        1.8:   server.js                                          -- Create main server file.





Phase 2: Adding Application Specific Dependencies
============================================================================================
* Every app will be different and thus need their own specific libraries/dependencies to 
  function. In the case of this app, we want to use a library called socket.io, which will
  allow us to use the chat functionality.
============================================================================================

  // Install project-specific dependencies:
    2.1: Install socket.io
      * For more information, see official documentation: https://socket.io/
        ------------------------------------------------------------------
            npm install socket.io
        ------------------------------------------------------------------




Phase 3: Create a socket.io server
===============================================================================================
* Unlike express apps where you would require express and instantiate the app, for this project
  pass the port number to the socket.io require.
=============================================================================================== 

  // Create a socket.io server:
    * To create a socket.io server, you need to load the library and then pass the port we want 
      to socket.io's require.
        -------------------------------------------------------
            const io = require('socket.io')(3000);
        -------------------------------------------------------















Phase X: Add intitial Application UI
=============================================================================================
* Building out the initial structure of the application UI.
=============================================================================================

  // Add the initial HTML application structure...
    * Based on what we want to do with our base application, we want to display
      our messages that each user writes, have a input box for users to writes
      thier messages, and a button to send the messages.

      X.1: Add HTML:
        --------------------------------------------------------------
            <div id="message-container"></div>                              -- Container that all messages sent will be added in this div.
            <form id="send-container"action="">                             -- Form that submits to the server...
              <input type="text" id="message-input">                        -- Input field for message...
              <button type="submit" id="send-button">Send</button>          -- Button that will submit message.
            </form>
        --------------------------------------------------------------





Phase 3: 